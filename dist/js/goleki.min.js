/**
* 
*  ___   ___  | |  ___ || _ ()
* |   | |   | | | |    ||// ||
* |___| |   | | | |--- | <_ ||
*  ___| |___| | | |___ ||\ || (*) JS
*             |_______|
* Search with autocomplete be easy.
*
* Version: 1.0.2
* Author: Antoni Putra <akiddcode@gmail.com> (http://antoniputra.github.io)
* Docs: https://github.com/antoniputra/goleki
* Repository: https://github.com/antoniputra/goleki.git
* Issues: https://github.com/antoniputra/goleki/issues
*/
!function(t){"use strict";"function"==typeof define&&define.amd?define(["jquery"],t):"undefined"!=typeof exports?module.exports=t(require("jquery")):t(jQuery)}(function(t){"use strict";var e=window.Goleki||{};e=function(){function e(e,o){var n=this;n.element=e,n.$element=t(e),n.$elementData=n.$element.data()||{},n.defaults=t.fn.goleki.options,n.options=t.extend({},n.defaults,o),n.options.templates=t.extend({},n.defaults.templates,o.templates),n.items=void 0,n.itemsObj,n.blacklistASCI=[38,39,40,37,17,36,35,34,33],n.timer,n.init()}return e}(),e.prototype.init=function(){var t=this;t.setupElement(),t.cycle()},e.prototype.cycle=function(){var e=this;e.$element.on("keyup",function(o){var n=this;return n.value.length<1&&8==o.which?(e.items=void 0,e.toggleContainerAutocomplete("none"),e.$autocompleteContent.html(""),void e.hideLoading()):void(o.which<32&&8!=o.which||-1===t.inArray(o.which,e.blacklistASCI)&&(e.showLoading(),clearTimeout(e.timer),e.timer=setTimeout(function(){if(n.value.length<1)return void e.$autocompleteContent.html("");if("object"==typeof e.options.source)e.fetchLocal(e.options.source,n.value,function(t){e.setItems(t),e.renderDisplay()});else{var t=e.fetch(n.value);t.done(function(t){e.setItems(t),e.renderDisplay()}),t.fail(function(){e.fail()})}},e.options.typeTimeout||800)))}),e.$element.on("focus",function(t){"undefined"!=typeof e.items&&e.toggleContainerAutocomplete("block")}),e.$element.on("focusout",function(t){setTimeout(function(){return e.toggleContainerAutocomplete("none")},200)})},e.prototype.setItems=function(e){var o=this,n=o.options.templates.item,i=o.options.jsonData?e[o.options.jsonData]:e,l=t("<li></li>");o.itemsObj=i,i.length<1&&(o.items=void 0),o.items=t.map(i,function(e,o){if("function"==typeof n)var i=t(n(e));else if(n instanceof jQuery)var i=t(n(e));else var i=t(n).text(e);return i.addClass("goleki-item"),i.attr("data-key",o),l.append(i),l[0]})},e.prototype.renderDisplay=function(){var e=this;e.hideLoading(),e.$containerAutocomplete.css("display","block"),t.isEmptyObject(e.items)?e.empty():e.$autocompleteContent.html(e.items)},e.prototype.fetch=function(e,o){var n,i=this;return n=i.options.params||{q:e,page:o||1},t.ajax({url:i.options.source,data:n,dataType:"json",method:"GET",cache:!0})},e.prototype.fetchLocal=function(e,o,n){var i,l;return i=[],l=new RegExp(o,"i"),t.each(e,function(t,e){l.test(e)&&i.push(e)}),n(i)},e.prototype.setupElement=function(){var e=this,o=e.getContainer();e.$element.attr("autocomplete","off"),"object"==typeof e.options.templates.loading&&e.options.templates.loading.css({display:"none"}),o.insertBefore(e.$element).append(e.$element),o.on("click",".goleki-item",function(o){var n=t(this),i=e.itemsObj[n.data("key")];return"function"==typeof e.options.onSelectItem?e.options.onSelectItem(o,e,e.$element,i):e.$element.val(n.data("result")||t.trim(n.text()))}),e.getContainerAutocomplete().insertAfter(e.$element).append(e.getAutocompleteContent())},e.prototype.getContainer=function(){var e,o=this;return e=o.options.templates.container?t(o.options.templates.container):t("<div></div>",{css:{position:"relative"}}),o.$container=e,o.$container},e.prototype.getContainerAutocomplete=function(){var e,o=this;return e=o.options.templates.containerAutocomplete?t(o.options.templates.containerAutocomplete):t("<div></div>",{css:{background:"#fff",border:"1px solid #bbb"}}),o.$containerAutocomplete=e.css({position:"absolute",top:o.$element.outerHeight(),width:"100%",display:"none","z-index":"999","overflow-y":"auto","max-height":"260px"}),o.$containerAutocomplete},e.prototype.getAutocompleteContent=function(){var e,o=this;return o.options.templates.autocompleteContent&&(e=t(o.options.templates.autocompleteContent)),o.$autocompleteContent=e,o.$autocompleteContent},e.prototype.toggleContainerAutocomplete=function(t){var e=this,o=e.$containerAutocomplete;"undefined"!=typeof t?o.css("display",t):"block"==o.css("display")?o.css("display","none"):o.css("display","block")},e.prototype.showLoading=function(){var t=this,e=t.options.templates.loading;"object"==typeof e?e.css({display:"block"}):(t.toggleContainerAutocomplete("block"),t.$autocompleteContent.html("<li><a>"+t.options.templates.loading+"</a></li>"))},e.prototype.hideLoading=function(){var t=this,e=t.options.templates.loading;"object"==typeof e?e.css({display:"none"}):t.$autocompleteContent.html("")},e.prototype.empty=function(){var t=this;return"function"==typeof t.options.templates.empty?t.$autocompleteContent.html("<li>"+t.options.templates.empty(t.$element,t)+"</li>"):t.$autocompleteContent.html("<li><a>"+t.options.templates.empty+"</a></li>")},e.prototype.fail=function(){var t=this;return"function"==typeof t.options.templates.fail?t.$autocompleteContent.html("<li>"+t.options.templates.fail(t.$element)+"</li>"):void t.$autocompleteContent.html("<li><a>"+t.options.templates.fail+"</a></li>")},t.fn.goleki=function(){var t,o,n=this,i=arguments[0],l=Array.prototype.slice.call(arguments,1),a=n.length;for(t=0;a>t;t++)if("object"==typeof i||"undefined"==typeof i?n[t].goleki=new e(n[t],i):o=n[t].goleki[i].apply(n[t].goleki,l),"undefined"!=typeof o)return o;return n},t.fn.goleki.options={source:null,params:null,jsonData:!1,typeTimeout:800,onSelectItem:null,templates:{container:null,containerAutocomplete:null,autocompleteContent:'<ul class="nav"></ul>',item:"<a></a>",loading:"loading...",empty:"There is no data",fail:"whoops something went wrong when request api."}}});